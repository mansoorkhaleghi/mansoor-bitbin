version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  airflow-webserver:
    build: .
    container_name: airflow-webserver
    depends_on:
      - postgres
      - clickhouse
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "2f8UjFslkHDnwrH2osH9UQJ0X2s2Y0Sv8I3LscdV2xY="
      AIRFLOW__WEBSERVER__SECRET_KEY: "anothersecret123"
      AIRFLOW_CONN_MY_POSTGRES: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
    command: >
      bash -c "airflow db init && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com && airflow webserver"

  airflow-scheduler:
    build: .
    container_name: airflow-scheduler
    depends_on:
      - postgres
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "2f8UjFslkHDnwrH2osH9UQJ0X2s2Y0Sv8I3LscdV2xY="
      # Add the connection environment variable here too
      AIRFLOW_CONN_MY_POSTGRES: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    volumes:
      - ./dags:/opt/airflow/dags
    command: airflow scheduler

  clickhouse:
    image: clickhouse/clickhouse-server:23.12
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse

  qdrant:
    image: qdrant/qdrant:v1.10.0
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

  ollama:
    build:
      context: ./agent
      dockerfile: Dockerfile
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama  # persistent model storage

volumes:
  postgres_data:
  clickhouse_data:
  qdrant_data:
  ollama:
